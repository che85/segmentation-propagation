function [] = greedy_call(img_fix,img_mov,affine_init,regout_affine,regout_deform,regout_deform_inv,mask_fix)

% -------------------------------------------------------------------------
% Calls greedy for deformable registration between two images. Creates
% affine transformation file and/or deformation field depending on which
% optional input filenames are provided.
%
% INPUT:
%
%   img_fix: fixed (reference) image filename
%   img_mov: moving image filename
%   affine_init: filename of affine transform for initialization (optional)
%   regout_affine: filename of output affine transformation (optional)
%   regout_deform: filename of output deformation (optional)
%   regout_deform_inv: filename of output inverse deformation (optional)
%   mask_fix: filename of mask for the fixed image
%
%   The optional input arguments determine which parameters are used in the 
%   call to greedy (affine, deformable registration, or both). Use full 
%   paths for all filenames.
% -------------------------------------------------------------------------

if ~isempty(regout_affine) && ~isempty(regout_deform)
    
    system(['/usr/local/bin/greedy -d 3 '...
                '-a '...
                '-i ' img_fix ' ' img_mov ' '...
                '-ia-identity '...
                '-dof 6 '...
                '-s 3mm 1.5mm '...
                '-gm ' mask_fix ' ' ...
                '-o ' regout_affine]);

     if isempty(regout_deform_inv)
         system(['/usr/local/bin/greedy -d 3 '...
                    '-i ' img_fix ' ' img_mov ' '...
                    '-it ' regout_affine ' '...
                    '-m SSD '...
                    '-n 100x100 '...
                    '-s 3mm 1.5mm '...
                    '-gm ' mask_fix ' ' ...
                    '-o ' regout_deform]);
     else
         system(['/usr/local/bin/greedy -d 3 '...
                    '-i ' img_fix ' ' img_mov ' '...
                    '-it ' regout_affine ' '...
                    '-m SSD '...
                    '-n 100x100 '...
                    '-gm ' mask_fix ' ' ...
                    '-s 3mm 1.5mm '...
                    '-o ' regout_deform ' '...
                    '-oinv ' regout_deform_inv]);
     end
    
    disp('Affine + deformable registration computed');

elseif ~isempty(regout_affine) && isempty(regout_deform)
    
    system(['/usr/local/bin/greedy -d 3 '...
                '-a '...
                '-i ' img_fix ' ' img_mov ' '...
                '-ia-identity '...
                '-dof 6 '...
                '-gm ' mask_fix ' ' ...
                '-s 3mm 1.5mm '...
                '-o ' regout_affine]);
            
    disp('Only affine registration computed');
    
elseif isempty(regout_affine) && ~isempty(regout_deform)

    if isempty(regout_deform_inv)      
        if ~isempty(affine_init)
            system(['/usr/local/bin/greedy -d 3 '...
                        '-i ' img_fix ' ' img_mov ' '...
                        '-m SSD '...
                        '-it ' affine_init ' '...
                        '-n 100x100 '...
                        '-gm ' mask_fix ' ' ...
                        '-s 3mm 1.5mm '...
                        '-o ' regout_deform]);
            disp('Initialized with input affine transform');

        else
            system(['/usr/local/bin/greedy -d 3 '...
                        '-i ' img_fix ' ' img_mov ' '...
                        '-m SSD '...
                        '-n 100x100 '...
                        '-gm ' mask_fix ' ' ...
                        '-s 3mm 1.5mm '...
                        '-o ' regout_deform]);
        end
    else
        if ~isempty(affine_init)
            system(['/usr/local/bin/greedy -d 3 '...
                        '-i ' img_fix ' ' img_mov ' '...
                        '-m SSD '...
                        '-n 100x100 '...
                        '-it ' affine_init ' '...
                        '-gm ' mask_fix ' ' ...
                        '-s 3mm 1.5mm '...
                        '-o ' regout_deform ' '...
                        '-oinv ' regout_deform_inv]);
            disp('Initialized with input affine transform');
        else
            system(['/usr/local/bin/greedy -d 3 '...
                        '-i ' img_fix ' ' img_mov ' '...
                        '-m SSD '...
                        '-n 100x100 '...
                        '-gm ' mask_fix ' ' ...
                        '-s 3mm 1.5mm '...
                        '-o ' regout_deform ' '...
                        '-oinv ' regout_deform_inv]);
        end
    end
            
    disp('Only deformable registration computed');
    
end
                