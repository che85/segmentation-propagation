function [] = apply_warp(image_type,img_fix,img_mov,img_reslice,reg_affine,reg_deform,reg_deform_inv)

% -------------------------------------------------------------------------
% Calls greedy to apply an affine and/or other deformation to a grayscale
% image, label map (segmentation), or vtk mesh. 
%
% INPUT:
%
%   image_type: 'grayscale', 'label', or 'mesh'
%   img_fix: fixed (reference) image filename
%   img_reslice: filename of output (warped) image
%   reg_affine: filename of affine registration (optional)
%   reg_deform: filename of deformation field (optional)
%   reg_deform_inv: filename of inverse deformation field (optional)
%
%   The optional input arguments determine which parameters are used in the 
%   call to greedy (affine, deformable registration, or both). Use full 
%   paths for all filenames.
% -------------------------------------------------------------------------

if ~isempty(reg_affine) && ~isempty(reg_deform) && isempty(reg_deform_inv)
    
    switch image_type
        case 'grayscale'
            str = ['/usr/local/bin/greedy -d 3 '...
                    '-rf ' img_fix ' ' ...
                    '-ri LINEAR '...
                    '-rm ' img_mov ' ' img_reslice ' '...
                    '-r ' reg_deform ' ' reg_affine];
        case 'label'
            str = ['/usr/local/bin/greedy -d 3 '...
                    '-rf ' img_fix ' ' ...
                    '-ri NN '...
                    '-rm ' img_mov ' ' img_reslice ' '...
                    '-r ' reg_deform ' ' reg_affine];
        case 'mesh'
            str = ['/usr/local/bin/greedy -d 3 '...
                    '-rf ' img_fix ' ' ...
                    '-rs ' mesh_mov ' ' mesh_reslice ' '...
                    '-r ' reg_deform ' ' reg_affine];
    end
    
    system(str);
    disp('Affine + deformable transformations applied');
    
elseif ~isempty(reg_affine) && isempty(reg_deform) && isempty(reg_deform_inv)
    
  switch image_type
        case 'grayscale'
            str = ['/usr/local/bin/greedy -d 3 '...
                    '-rf ' img_fix ' ' ...
                    '-ri LINEAR '...
                    '-rm ' img_mov ' ' img_reslice ' '...
                    '-r ' reg_affine];
        case 'label'
            str = ['/usr/local/bin/greedy -d 3 '...
                    '-rf ' img_fix ' ' ...
                    '-ri NN '...
                    '-rm ' img_mov ' ' img_reslice ' '...
                    '-r ' reg_affine];
        case 'mesh'
            str = ['/usr/local/bin/greedy -d 3 '...
                    '-rf ' img_fix ' ' ...
                    '-rs ' img_mov ' ' img_reslice ' '...
                    '-r ' reg_affine];
  end
    
    system(str);
    disp('Affine transformation applied');
    
elseif ~isempty(reg_affine) && isempty(reg_deform) && ~isempty(reg_deform_inv)
    
    switch image_type
        case 'grayscale'
            str = ['/usr/local/bin/greedy -d 3 '...
                    '-rf ' img_fix ' ' ...
                    '-ri LINEAR '...
                    '-rm ' img_mov ' ' img_reslice ' '...
                    '-r ' reg_affine ',-1 ' reg_deform_inv];
        case 'label'
            str = ['/usr/local/bin/greedy -d 3 '...
                    '-rf ' img_fix ' ' ...
                    '-ri NN '...
                    '-rm ' img_mov ' ' img_reslice ' '...
                    '-r ' reg_affine ',-1 ' reg_deform_inv];
        case 'mesh'
            str = ['/usr/local/bin/greedy -d 3 '...
                    '-rf ' img_fix ' ' ...
                    '-rs ' img_mov ' ' img_reslice ' '...
                    '-r ' reg_affine ',-1 ' reg_deform_inv];
    end
    
    system(str);
    disp('Inverse affine + deformable transformations applied');
    
elseif isempty(reg_affine) && ~isempty(reg_deform) && isempty(reg_deform_inv)
    
    switch image_type
        case 'grayscale'
            str = ['/usr/local/bin/greedy -d 3 '...
                    '-rf ' img_fix ' ' ...
                    '-ri LINEAR '...
                    '-rm ' img_mov ' ' img_reslice ' '...
                    '-r ' reg_deform];
        case 'label'
            str = ['/usr/local/bin/greedy -d 3 '...
                    '-rf ' img_fix ' ' ...
                    '-ri NN '...
                    '-rm ' img_mov ' ' img_reslice ' '...
                    '-r ' reg_deform];
        case 'mesh'
            str = ['/usr/local/bin/greedy -d 3 '...
                    '-rf ' img_fix ' ' ...
                    '-rs ' img_mov ' ' img_reslice ' '...
                    '-r ' reg_deform];
    end
    
    system(str);
    disp('Deformable transformation applied');
    
elseif isempty(reg_affine) && isempty(reg_deform) && ~isempty(reg_deform_inv)
    
    switch image_type
        case 'grayscale'
            str = ['/usr/local/bin/greedy -d 3 '...
                    '-rf ' img_fix ' ' ...
                    '-ri LINEAR '...
                    '-rm ' img_mov ' ' img_reslice ' '...
                    '-r ' reg_deform_inv];
        case 'label'
            str = ['/usr/local/bin/greedy -d 3 '...
                    '-rf ' img_fix ' ' ...
                    '-ri NN '...
                    '-rm ' img_mov ' ' img_reslice ' '...
                    '-r ' reg_deform_inv];
        case 'mesh'
            str = ['/usr/local/bin/greedy -d 3 '...
                    '-rf ' img_fix ' ' ...
                    '-rs ' img_mov ' ' img_reslice ' '...
                    '-r ' reg_deform_inv];
    end
    
    system(str);
    disp('Only inverse deformable registration applied'); 
    
else
    
    warning('Transforms not properly specified')
    
end


